from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.lang import Builder
from kivy.properties import StringProperty

Builder.load_string('''
#: import MDFlatButton kivymd.button.MDFlatButton 

<StartScreen>

    MDFlatButton:
        id: button
        text: 'Press Me'
        size_hint_x: 1
        pos_hint: {'y': .5}

        on_release:
            # Через ключево слово 'self' мы можем ссылаться
            # на собственые атрибуты и методы текущего виджета.
            self.text = root.new_text_for_button
''')

class StartScreen(BoxLayout):
    new_text_for_button = StringProperty()

    def on_new_text_for_button(self, instance, value):
        print(instance, value)

class Program(App):
    def build(self):
        return StartScreen(new_text_for_button='This new text')

if __name__ in ('__main__', '__android__'):
    Program().run()from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.lang import Builder
from kivy.properties import StringProperty

Builder.load_string('''
#: import MDFlatButton kivymd.button.MDFlatButton

<StartScreen>

    MDFlatButton:
        id: button
        text: 'Press Me'
        size_hint_x: 1
        pos_hint: {'y': .5}

        on_release:
            # Через ключево слово 'self' мы можем ссылаться
            # на собственые атрибуты и методы текущего виджета.
            self.text = root.new_text_for_button
''')

class StartScreen(BoxLayout):
    new_text_for_button = StringProperty()

    def on_new_text_for_button(self, instance, value):
        print(instance, value)

class Program(App):
    def build(self):
        return StartScreen(new_text_for_button='This new text')

if __name__ in ('__main__', '__android__'):
    Program().run()
